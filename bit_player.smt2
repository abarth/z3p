; Copyright 2015 The Z3P Authors. All rights reserved.
; Use of this source code is governed by a BSD-style license that can be
; found in the LICENSE file.

(define-fun is_valid_hand ((hand (_ BitVec 52))) Bool
    (exists ((a (_ BitVec 8))
             (b (_ BitVec 8))
             (c (_ BitVec 8))
             (d (_ BitVec 8))
             (e (_ BitVec 8))
             (f (_ BitVec 8))
             (g (_ BitVec 8))
             (h (_ BitVec 8))
             (i (_ BitVec 8))
             (j (_ BitVec 8))
             (k (_ BitVec 8))
             (l (_ BitVec 8))
             (m (_ BitVec 8)))
        (and (distinct a b c d e f g h i j k l m)
             ; #x34 is 52 and bvult is Bit Vector Unsigned Less Than
             (bvult a #x34)
             (bvult b #x34)
             (bvult c #x34)
             (bvult d #x34)
             (bvult e #x34)
             (bvult f #x34)
             (bvult g #x34)
             (bvult h #x34)
             (bvult i #x34)
             (bvult j #x34)
             (bvult k #x34)
             (bvult l #x34)
             (bvult m #x34)
             (= hand (bvor (bvshl ((_ zero_extend 51) bit1) ((_ zero_extend 44) a))
                           (bvshl ((_ zero_extend 51) bit1) ((_ zero_extend 44) b))
                           (bvshl ((_ zero_extend 51) bit1) ((_ zero_extend 44) c))
                           (bvshl ((_ zero_extend 51) bit1) ((_ zero_extend 44) d))
                           (bvshl ((_ zero_extend 51) bit1) ((_ zero_extend 44) e))
                           (bvshl ((_ zero_extend 51) bit1) ((_ zero_extend 44) f))
                           (bvshl ((_ zero_extend 51) bit1) ((_ zero_extend 44) g))
                           (bvshl ((_ zero_extend 51) bit1) ((_ zero_extend 44) h))
                           (bvshl ((_ zero_extend 51) bit1) ((_ zero_extend 44) i))
                           (bvshl ((_ zero_extend 51) bit1) ((_ zero_extend 44) j))
                           (bvshl ((_ zero_extend 51) bit1) ((_ zero_extend 44) k))
                           (bvshl ((_ zero_extend 51) bit1) ((_ zero_extend 44) l))
                           (bvshl ((_ zero_extend 51) bit1) ((_ zero_extend 44) m)))))))

(declare-const hand_south (_ BitVec 52))
(declare-const hand_west  (_ BitVec 52))
(declare-const hand_north (_ BitVec 52))
(declare-const hand_east  (_ BitVec 52))

(assert (is_valid_hand hand_south))
(assert (is_valid_hand hand_west))
(assert (is_valid_hand hand_north))
(assert (is_valid_hand hand_east))

; (assert (= (bvredand (bvor hand_south hand_west hand_north hand_east))
;            bit1))

(check-sat)
(get-model)
